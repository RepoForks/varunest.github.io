<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Varun Est</title>
		<description>A Blog by Varun Verma</description>
		<link></link>
		<atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Setting SSL With OSX's Built in Apache Server</title>
				<description>&lt;p&gt;As a developer, you may want to enable SSL on your local Apache! If that is the case, then this post is for you. We are going to tweak some configurations of Apache Webserver in order to make SSL traffic get going.&lt;/p&gt;

&lt;p&gt;Before we start, it is important that you have your &lt;strong&gt;private key&lt;/strong&gt; and &lt;strong&gt;server certificate&lt;/strong&gt; issued by your own CA, which are required because SSL works on public cryptography where certificates are exchanged to generate session keys. If you don&amp;#39;t have them, learn to generate them yourselves &lt;a href=&quot;/creating-ca-and-self-signed-certificates&quot;&gt;here&lt;/a&gt;. Remember to put the Common Name of the Certificate to &amp;quot;Localhost&amp;quot;, since you will be testing this locally.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Okay, considering you have both &amp;quot;Key&amp;quot; and &amp;quot;Certificate&amp;quot; open up &lt;strong&gt;Finder&lt;/strong&gt; and press &lt;code&gt;Command+shift+G&lt;/code&gt;. Type this location in the dialog box: &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/private/etc/apache2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Once you are there create a folder &amp;quot;SSLData&amp;quot;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open &lt;code&gt;httpd.conf&lt;/code&gt; file in any text editor you are comfortable with(you may want to create its backup first, in case you mess things up). And uncomment te following lines (i.e remove # in front of them) : &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;LoadModule ssl_module libexec/apache2/mod_ssl.so&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Include /private/etc/apache2/extra/httpd-ssl.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
 

&lt;p&gt;This will enable SSL module and will load its configurations from &lt;code&gt;httpd-ssl.conf&lt;/code&gt; file. Now, save the &lt;code&gt;httpd.conf&lt;/code&gt; file and exit the editor.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now open up the &lt;code&gt;httpd-ssl.conf&lt;/code&gt; located in &amp;quot;extra&amp;quot; folder. Again you may want to create its backup since you can mess things up. &lt;/li&gt;
&lt;li&gt;Search for &lt;strong&gt;DocumentRoot&lt;/strong&gt;, and enter the location of your root folder where your sites reside.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;DocumentRoot /Path/to/root/folder&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Give &lt;strong&gt;localhost&lt;/strong&gt; as a &lt;strong&gt;ServerName&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ServerName localhost&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Edit &lt;strong&gt;SSLCertificateFile&lt;/strong&gt; to point it to your certificate, which will be in &amp;quot;SSLData&amp;quot; folder we just created :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;SSLCertificateFile /private/etc/apache2/SSLData/server.crt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Repeat for &lt;strong&gt;SSLCertificateKeyFile&lt;/strong&gt; :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;SSLCertificateKeyFile /private/etc/apache2/SSLData/server.key&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Also comment out (put # in front) the following lines :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;SSLCACertificatePath&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;SSLCARevocationPath&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Save the file and exit the Editor.&lt;/li&gt;
&lt;li&gt;Now put your &amp;#39;&lt;strong&gt;server.crt&lt;/strong&gt;&amp;#39; and &amp;#39;&lt;strong&gt;server.key&lt;/strong&gt;&amp;#39; in the &amp;quot;SSLData&amp;quot; you just created.&lt;/li&gt;
&lt;li&gt;Now, restart your Apache with following command :&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apachectl restart&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If everything went well, you should be able to see &amp;quot;&lt;strong&gt;&lt;a href=&quot;https://localhost&quot;&gt;https://localhost&lt;/a&gt;&lt;/strong&gt;&amp;quot; working. If not :( then you can check the error log file located in &amp;quot;&lt;strong&gt;/var/log/apache2/error_log&lt;/strong&gt;&amp;quot; or you can always comment your problems :).&lt;/p&gt;
</description>
				<pubDate>Fri, 13 Feb 2015 10:56:53 +0530</pubDate>
				<link>/2015/02/setting-ssl-with-osxs-built-in-apache-server</link>
				<guid isPermaLink="true">/2015/02/setting-ssl-with-osxs-built-in-apache-server</guid>
			</item>
		
			<item>
				<title>Installing Root CA Certificate in Mac OSx</title>
				<description>&lt;p&gt;This post it to show how to make OSX System trust the &lt;strong&gt;Certificates&lt;/strong&gt; issued by your own CA.&lt;/p&gt;

&lt;p&gt;I will assume that you know how to create your own CA and issue Certificates with it, if not you can check that &lt;strong&gt;&lt;a href=&quot;../creating-ca-and-self-signed-certificates&quot;&gt;Here&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In your OSX, open &lt;strong&gt;Keychain Access&lt;/strong&gt; app (located in Utilities in Applications).&lt;/li&gt;
&lt;li&gt;Under &lt;strong&gt;keychain&lt;/strong&gt; select System and under &lt;strong&gt;category&lt;/strong&gt; select Certificates.&lt;/li&gt;
&lt;li&gt;Here, Click on &lt;strong&gt;+&lt;/strong&gt; sign to add your Root Certificate. Locate the Root Certificate and click on Open.
&lt;img src=&quot;/images/post-images/rootCAInstallation.jpg&quot; alt=&quot;Screenshot Installing Root Certificate&quot;&gt;&lt;/li&gt;
&lt;li&gt;In the new dialog box click on &amp;quot;Always Trust&amp;quot;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now you are good to go! All the certificates which are issued by your CA will be trusted by this System. &lt;/p&gt;
</description>
				<pubDate>Thu, 12 Feb 2015 10:49:06 +0530</pubDate>
				<link>/2015/02/installing-root-ca-certificate-in-mac-osx</link>
				<guid isPermaLink="true">/2015/02/installing-root-ca-certificate-in-mac-osx</guid>
			</item>
		
			<item>
				<title>Creating your own CA & self signed Certificates</title>
				<description>&lt;p&gt;In this post, we will see how to create your own &lt;strong&gt;Central Authority&lt;/strong&gt; (CA) and w&amp;#39;ll generate &lt;strong&gt;Certificates&lt;/strong&gt; using that CA. This is important procedure to learn because Certificates are practically implemented everywhere, there is SSL encryption in HTTPS protocol in which Certificates play a major role, Certificates are also used for Authentication between server and client etc.&lt;/p&gt;

&lt;h4 id=&quot;why-ssl-and-certificates-are-required?&quot;&gt;Why SSL and Certificates are required?&lt;/h4&gt;

&lt;p&gt;What we will see here in this post is very simplified view of how SSL is implemented and how Certificates play their part. 
Normally traffic sent over the internet is not encrypted and anyone with the sniff tools like &lt;strong&gt;wireshark&lt;/strong&gt;, &lt;strong&gt;tcpdump&lt;/strong&gt; etc can snoop all the traffic by analyzing the data packets. This can lead to many problems, especially where the security is the main concern, such as in online transactions and credit card data. &lt;/p&gt;

&lt;p&gt;To tackle this problem, Secure Socket Layer(SSl) is used to encrypt the data sent over the web. SSL uses assymmetric cryptography, also known as public key cryptography, in which two keys public and private are created. Anything encrypted with one key can only be decrypted using the other key, which ensures that data can come from only authenticated source/server.&lt;/p&gt;

&lt;p&gt;So, if SSL encrypts the data then why are Certificates required? Well, technically anyone can encrypt data and send it to you, but who will ensure that data came from trusted or authentic person ? Here Certificates come into play! CA ensures that the certifcate holder is really who he claims to be. This prevents  impersonations attacks.&lt;/p&gt;

&lt;h4 id=&quot;how-the-system-works!&quot;&gt;How the System Works!&lt;/h4&gt;

&lt;p&gt;In normal Https protocol, first client sends hello request to Server. Server, then replies with its own Certificate, whose authenticity is checked by the browser i.e if it is signed by known CA or not(CA information is generally stored in the browser). Once the certificate is checked and client is happy, then it sends its session key to the server by encrypting it with the server&amp;#39;s certificate. This session key then used for the rest of the data exchange during the session.&lt;/p&gt;

&lt;p&gt;This is just simplified overview, a lot more happens behind the screen. For now this will suffice. Now, lets jump to exciting part. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : This procedure is done in OSX, which is unix based operating system. For other  machines the procedure should be similar.&lt;/p&gt;

&lt;h1 id=&quot;creating-your-own-ca&quot;&gt;Creating your own CA&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;Before we start it is important to note that the certificates signed by your CA will not be accepted by the browsers because they won&amp;#39;t trust your CA. You must add your own CA in browsers trusted CA&amp;#39;s list. 
To create CA Open up your terminal and check whether &lt;code&gt;openssl&lt;/code&gt; is installed or not. Fire this command :  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;which openssl&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If &lt;code&gt;openssl&lt;/code&gt; is installed, this will return the directory where it is located or else it will print nothing. &lt;code&gt;openssl&lt;/code&gt; is a tool which is open source implementation of SSL and TLS. If you don&amp;#39;t have it, go ahead and install it.&lt;/p&gt;

&lt;h4 id=&quot;creating-ca-private-key-:&quot;&gt;Creating CA private key :&lt;/h4&gt;

&lt;p&gt;In terminal, create Directory in which you want to keep the key and certificate of the Central Authority. Navigate to that folder and then fire the following command: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;openssl genrsa -des3 -out rootCA.key 2048&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This command will generate RSA private key using triple-DES standards of length 2048 bits which is quite secure. Following is the output(you can give any pass phrase you want) : &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Generating RSA private key, &lt;span class=&quot;m&quot;&gt;1024&lt;/span&gt; bit long modulus
.........................................................++++++
........++++++
e is &lt;span class=&quot;m&quot;&gt;65537&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0x10001&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Enter PEM pass phrase:
Verifying password - Enter PEM pass phrase:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;removing-passphrase-:&quot;&gt;Removing Passphrase :&lt;/h4&gt;

&lt;p&gt;Since we now have our CA&amp;#39;s private key, we should probably remove passphrase from it because it can be inconvinient to type passphrase every time we perform operation with this key(keeping in mind that the operations are very large in number). This can done in many ways, one way to do so is following : &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cp rootCA.key rootCA.key.org
openssl rsa -in rootCA.key.org -out rootCA.key&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;creating-ca-self-signed-certificate-:&quot;&gt;Creating CA self signed Certificate :&lt;/h4&gt;

&lt;p&gt;Fire this command in the terminal to create your CA Certificate : &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;openssl req  -new -x509 -days &lt;span class=&quot;m&quot;&gt;999&lt;/span&gt; -key rootCA.key -out rootCA.crt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There will be following prompts : &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Country Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; letter code&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;GB&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;:IN
State or Province Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;full name&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Berkshire&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Chandigarh
Locality Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;eg, city&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Newbury&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Chandigarh
Organization Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;eg, company&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;My Company Ltd&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Varunest
Organizational Unit Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;eg, section&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;:Information Technology
Common Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;eg, your name or your server&lt;span class=&quot;s1&quot;&gt;&amp;#39;s hostname) []:varunest.com&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;Email Address []: mailvarun93@gmail.com&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;Please enter the following &amp;#39;&lt;/span&gt;extra&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt; attributes
to be sent with your certificate request
A challenge password &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;:
An optional company name &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This command will create rootCA.crt, which will be valid for 999 days, using rootCA.key.&lt;/p&gt;

&lt;p&gt;And now you have your own CA&amp;#39;s private key and certificate (which acts as a public key). So, to issue certificates to servers all you need to do is take Certificate Signing Request aka CSR (provided by the server which want its certificate from the CA) and create its certificate using this rootCA.key.&lt;/p&gt;

&lt;h1 id=&quot;issuing-server-certs-with-your-own-ca&quot;&gt;Issuing Server Certs with your own CA&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;Now since you have your own CA, you can start distributing certificates to Server signed by you. In order to do so follow the following steps : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create private key &lt;code&gt;server.key&lt;/code&gt; as we did for CA&lt;/li&gt;
&lt;li&gt;Create CSR (Certificate Signing Request) with this &lt;code&gt;server.key&lt;/code&gt; with the following command : &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;openssl req -new -key server.key -out server.csr&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There will be lot of prompts, answer them correctly and in common name type the Fully qualified domain name of your server for which you want your certificate. This will create your CSR &lt;code&gt;server.csr&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now remove passphrase from the &lt;code&gt;server.key&lt;/code&gt; like we did earlier&lt;/li&gt;
&lt;li&gt;Generally, the CSR created by the server i.e &lt;code&gt;server.csr&lt;/code&gt; is sent to the CA from which you want your certificate. Since here ourselves are the CA therefore we will sign the certificate using our CA Certificate &lt;code&gt;rootCA.crt&lt;/code&gt; by the following command : &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;openssl ca -batch -days &lt;span class=&quot;m&quot;&gt;999&lt;/span&gt; -in server.csr -out server.crt -keyfile rootCA.key -cert rootCA.crt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This command will issue you &lt;strong&gt;server.crt&lt;/strong&gt; which will be valid for 999 days. And voilà you have server certificate which is issued by you :D.&lt;/p&gt;

&lt;p&gt;Now, &lt;a href=&quot;/installing-root-ca-certificate-in-mac-osx&quot;&gt;install your Root Certificate&lt;/a&gt; in any system to make it trust the certificates issue by you. Finally, configure your local Apache server for SSL traffic with the &lt;code&gt;server.key&lt;/code&gt; and &lt;code&gt;server.crt&lt;/code&gt; to test if it allows ssl traffic on that domain.&lt;/p&gt;
</description>
				<pubDate>Wed, 11 Feb 2015 17:19:23 +0530</pubDate>
				<link>/2015/02/creating-ca-and-self-signed-certificates</link>
				<guid isPermaLink="true">/2015/02/creating-ca-and-self-signed-certificates</guid>
			</item>
		
			<item>
				<title>Enabling Php and Configuring Apache Server on Mac OSX</title>
				<description>&lt;p&gt;Recently I have been writing Server Side Php Script and desiging UI in HTML5 and CSS, so to test and debug my code locally I needed to setup Apache Server and enable Php on it. Fortunately, apache server comes pre-installed in OSX. There are two ways to configure apache, either install clients like MAMP which will do the job for you or do it by yourself i.e Manually.&lt;/p&gt;

&lt;h1 id=&quot;configuring-server&quot;&gt;Configuring Server&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;In this post, I am going show how to configure Apache Server Manually. Launch Terminal on your mac and open &lt;code&gt;httpd.conf&lt;/code&gt; file via following command. It is recommended to make a copy of &lt;code&gt;httpd.conf&lt;/code&gt; for backup, incase you mess things up. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;nano /etc/apache2/httpd.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In that file search for the line &lt;code&gt;DocumentRoot&lt;/code&gt;. In &lt;strong&gt;nano&lt;/strong&gt; editor to perform search use &lt;code&gt;ctrl+w&lt;/code&gt;. By default it should be : &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;DocumentRoot &lt;span class=&quot;s2&quot;&gt;&amp;quot;/Library/Webserver/Documents&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Change the directory to wherever you want your root folder be i.e wherever you want your Sites to host, or keep it default. Now search for &lt;code&gt;&amp;lt;Directory &amp;quot;/Library/Webserver/Documents&amp;quot;&amp;gt;&lt;/code&gt; in &lt;code&gt;httpd.conf&lt;/code&gt;. Change the Directory to wherever your new root directory is (which you defined in previous step or keep it default if you didn&amp;#39;t modify the Root Directory). Now add the following lines before the closing &lt;code&gt;&amp;lt;/Directory&amp;gt;&lt;/code&gt; tag : &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Options Indexes FollowSymLinks Multiviews
AllowOverride None
Order allow, deny
Allow from all&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;enabling-php-on-apache-webserver&quot;&gt;Enabling Php on Apache Webserver&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;Now, since your apache server is configured you need to enable Php. In order to do so search for the following line in &lt;code&gt;httpd.conf&lt;/code&gt; &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;LoadModule php5_module libexec/apache2/libphp5.so&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and uncomment it by removing # in front of this line. This should enable Php execution on your apache server. Finally, save &lt;code&gt;httpd.conf&lt;/code&gt; file using &lt;code&gt;ctrl+o&lt;/code&gt; and then &lt;code&gt;ctrl+x&lt;/code&gt;. 
Now in Terminal type :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apachectl restart&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Launch any browser, and navigate to &amp;quot;&lt;a href=&quot;http://localhost&quot;&gt;http://localhost&lt;/a&gt;&amp;quot; to very the server is running. If everything went well you will see &amp;quot;It Works!&amp;quot; message.&lt;/p&gt;

&lt;p&gt;If unfortunately somehow your local Apache Webserver is not working then you can check for errors using : &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apachectl configtest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can check Error Logs, by tailing the log file located in &lt;code&gt;/var/log/apache2/error_log&lt;/code&gt; :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;tail /var/log/apache2/error_log&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Happy Coding :)&lt;/p&gt;
</description>
				<pubDate>Tue, 10 Feb 2015 12:08:52 +0530</pubDate>
				<link>/2015/02/enabling-and-configuring-apache-server-on-mac-osx</link>
				<guid isPermaLink="true">/2015/02/enabling-and-configuring-apache-server-on-mac-osx</guid>
			</item>
		
			<item>
				<title>Blog Commencement</title>
				<description>&lt;blockquote&gt;
&lt;p&gt;I concur with the opinion that a person should establish his/her identity in the virtual world aka the world of Internet. Consequence being, this Blog.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I will be writing about propositions, issues and my daily activities as I atone on my way. This will contain more of a geeky stuff, hacks, programs, code etc. I hope this to be a lively and blissful experience.&lt;/p&gt;
</description>
				<pubDate>Mon, 09 Feb 2015 00:00:30 +0530</pubDate>
				<link>/2015/02/blog-commencement</link>
				<guid isPermaLink="true">/2015/02/blog-commencement</guid>
			</item>
		
			<item>
				<title>Jekyll Clean Theme</title>
				<description>&lt;ul&gt;
&lt;li&gt;Get it from &lt;a href=&quot;https://github.com/scotte/jekyll-clean&quot;&gt;github&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;See the &lt;a href=&quot;https://scotte.github.io/jekyll-clean&quot;&gt;live demo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;See it &lt;a href=&quot;https://scotte.github.io&quot;&gt;in action on my own blog&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Welcome to the sample post for the Jekyll Clean theme.&lt;/p&gt;

&lt;p&gt;A simple and clean Jekyll theme using &lt;a href=&quot;http://getbootstrap.com&quot;&gt;bootstrap&lt;/a&gt;
(not to be confused with jekyll-bootstrap) that&amp;#39;s easy to modify and very
modular in component and element reuse.&lt;/p&gt;

&lt;p&gt;It uses Disqus for comments and includes Google Analytics support. Both of
these features are disabled by default and can be enabled via _config.yml. You
can also rip this code out of the templates if you like (footer.html and post.html).
The beauty of Jekyll - keep things clean... Jekyll Clean!&lt;/p&gt;

&lt;p&gt;The theme works well on mobile phones, using a collapsable nav bar and hiding the
sidebar. The links pane in the sidebar is available on mobile through the nav menu,
and you can do the same thing for any other sections added to the sidebar.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t forget to occassionally merge against my upstream repository so you can get
the latest changes. Pull requests are encouraged and accepted!&lt;/p&gt;

&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;

&lt;p&gt;If you don&amp;#39;t have a blog already on github, start by cloning this repository.
Best to do that directly on github and then clone that down to your computer.&lt;/p&gt;

&lt;p&gt;If you already do have a blog, You can certainly apply this theme to your existing
blog in place, but then you won&amp;#39;t be able to merge as the theme changes. If you
re-apply your blog history on top of this theme&amp;#39;s &lt;strong&gt;gh-pages&lt;/strong&gt; branch, it&amp;#39;s then
easy to update to the latest version of the theme. You also don&amp;#39;t want to have to
deal with resolving old conflicts from your existing history, so you may wish to to
push your existing master off to a new branch so you have the old history and start
a new branch with this as the start, merging in your _posts and other assets (after
git rm&amp;#39;ing the current _posts.&lt;/p&gt;

&lt;p&gt;Not ideal, but you have to make a choice - either apply it manually or base your
blog off this theme&amp;#39;s branch. Either way it will work, and both have their own
pros and cons.&lt;/p&gt;

&lt;p&gt;You can setup an upstream tracking repository like so:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git remote add upstream git@github.com:scotte/jekyll-clean.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now when you wish to merge your own branch onto the latest version of the
theme, simply do:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git fetch upstream
$ git merge upstream/gh-pages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course you will have to resolve conflicts for _config.yml, _includes/links-list.html,
and _posts, and so on, but in practice this is pretty simple.&lt;/p&gt;

&lt;p&gt;This is how I maintain my own blog which is based on this theme. The old history is
sitting in an &lt;strong&gt;old-master&lt;/strong&gt; branch that I can refer to when I need to.&lt;/p&gt;

&lt;h1 id=&quot;license&quot;&gt;License&lt;/h1&gt;

&lt;p&gt;The content of this theme is distributed and licensed under a
&lt;img src=&quot;/images/cc_by_88x31.png&quot; alt=&quot;License Badge&quot;&gt;
&lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode&quot;&gt;Creative Commons Attribution 4.0 License&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;This license lets others distribute, remix, tweak, and build upon your work,
even commercially, as long as they credit you for the original creation. This
is the most accommodating of licenses offered. Recommended for maximum
dissemination and use of licensed materials.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In other words: you can do anything you want with this theme on any site, just please
provide a link to &lt;a href=&quot;https://github.com/scotte/jekyll-clean&quot;&gt;the original theme on github&lt;/a&gt;
so I get credit for the original design. Beyond that, have at it!&lt;/p&gt;

&lt;p&gt;This theme includes the following files which are the properties of their
respective owners:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;js/bootstrap.min.js - &lt;a href=&quot;http://getbootstrap.com&quot;&gt;bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;css/bootstrap.min.css - &lt;a href=&quot;http://getbootstrap.com&quot;&gt;bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;js/jquery.min.js - &lt;a href=&quot;https://jquery.com&quot;&gt;jquery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;images/cc_by_88x31.png - &lt;a href=&quot;https://creativecommons.org&quot;&gt;creative commons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Sat, 23 Aug 2014 04:55:06 +0530</pubDate>
				<link>/2014/08/jekyll-clean-theme</link>
				<guid isPermaLink="true">/2014/08/jekyll-clean-theme</guid>
			</item>
		
			<item>
				<title>Lorem ipsum dolor sit amet</title>
				<description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed quam metus, commodo sit amet ante a, finibus efficitur lorem. Maecenas egestas purus in tempor volutpat. Sed dapibus tortor nec sem suscipit ullamcorper. Nulla nec lorem lacus. Phasellus condimentum massa quis dolor consequat viverra ut ac magna. Ut a consequat nisi. Vivamus at leo ut turpis convallis lacinia. Curabitur eu placerat quam. Donec ultricies faucibus dui, a tincidunt lorem lobortis condimentum.&lt;/p&gt;

&lt;p&gt;Quisque aliquet consectetur justo sit amet convallis. Nunc vel aliquet ipsum, sit amet elementum justo. Vivamus id magna mi. Cras luctus est vel ipsum sagittis pellentesque. Vivamus ante elit, porttitor vitae quam quis, fermentum malesuada risus. Integer nec lectus vel lacus cursus tristique in euismod ipsum. Duis ut varius enim. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Morbi et elit eu tortor lacinia sollicitudin non in lacus.&lt;/p&gt;

&lt;p&gt;Integer at viverra turpis. Duis aliquam mattis sapien tempor eleifend. Mauris nec eleifend risus, quis mollis neque. Vivamus non dapibus justo, vel ornare magna. Nunc in nulla venenatis, imperdiet diam in, accumsan massa. Etiam congue augue ipsum, sit amet rutrum nisi blandit quis. Cras in lectus non lorem auctor consequat a vel sem. Aliquam erat volutpat. Fusce lobortis vel orci vitae ullamcorper. Phasellus id eleifend eros. Mauris vulputate, nisi vel auctor auctor, quam enim tincidunt felis, vitae fermentum odio tortor eget est. Integer ornare blandit lectus a accumsan.&lt;/p&gt;
</description>
				<pubDate>Wed, 23 Jul 2014 04:55:06 +0530</pubDate>
				<link>/2014/07/Lorem-ipsum-dolor-sit-amet</link>
				<guid isPermaLink="true">/2014/07/Lorem-ipsum-dolor-sit-amet</guid>
			</item>
		
			<item>
				<title>Maecenas feugiat fringilla nibh</title>
				<description>&lt;p&gt;Maecenas feugiat fringilla nibh ut mattis. Sed non metus sit amet mi luctus feugiat in quis sem. Vivamus pulvinar commodo bibendum. Interdum et malesuada fames ac ante ipsum primis in faucibus. Maecenas sapien nulla, eleifend in dolor et, rutrum maximus velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse tempus malesuada egestas. Phasellus pulvinar vulputate urna in tempor. In vel sapien ullamcorper, condimentum ipsum ut, porttitor turpis. Nam auctor erat sed lectus tempus euismod. Nunc ipsum quam, condimentum ac bibendum sit amet, sodales nec metus.&lt;/p&gt;

&lt;p&gt;Vivamus a ullamcorper ipsum. Donec dictum eleifend massa, rhoncus consequat sem tempor nec. Ut bibendum luctus gravida. Nullam eleifend laoreet quam, nec tincidunt dolor tincidunt non. Aenean vel magna massa. Pellentesque sit amet tincidunt ante. Nulla posuere varius elit eu consequat. Sed vitae tortor scelerisque lacus eleifend condimentum. Nulla vitae neque sed lorem sagittis pretium eu nec est. Aliquam in euismod risus, vel vulputate orci.&lt;/p&gt;

&lt;p&gt;Praesent sit amet auctor justo. Suspendisse pretium rutrum vehicula. Cras ut porta urna. Morbi massa odio, eleifend vitae dictum eget, mattis nec metus. Praesent pellentesque metus eu massa pharetra facilisis. Suspendisse potenti. Vestibulum pellentesque pharetra tristique. Nam ut lobortis felis. Proin sit amet consequat ipsum. Curabitur et mattis justo, sit amet feugiat lectus. Sed eleifend eget arcu non pretium. Suspendisse rhoncus erat quis leo laoreet rhoncus. Aliquam quis metus vitae enim cursus sodales. In euismod tortor id odio fermentum, non pretium ipsum iaculis. Quisque consectetur elementum nisi, et posuere odio vulputate ac. Ut consequat, velit eget fermentum ultrices, ligula odio fringilla diam, sit amet accumsan elit velit tempus dolor.&lt;/p&gt;
</description>
				<pubDate>Mon, 23 Jun 2014 04:55:06 +0530</pubDate>
				<link>/2014/06/Maecenas-feugiat-fringilla-nibh</link>
				<guid isPermaLink="true">/2014/06/Maecenas-feugiat-fringilla-nibh</guid>
			</item>
		
			<item>
				<title>Cum sociis natoque penatibus</title>
				<description>&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Phasellus fermentum facilisis velit eu auctor. Maecenas tincidunt, leo tempor bibendum auctor, ligula lorem ultricies tellus, ac auctor lorem libero a sapien. Donec ac suscipit tellus. Quisque vitae placerat lorem. In ullamcorper malesuada risus, eget fringilla lacus dignissim at. Proin faucibus, nibh vel molestie scelerisque, lorem urna tempus lacus, id viverra odio dolor sit amet odio. In hendrerit, orci vel scelerisque luctus, arcu purus aliquet turpis, a bibendum nulla est et dui.&lt;/p&gt;

&lt;p&gt;Praesent pellentesque posuere lectus eget condimentum. Ut vitae nisi diam. Quisque vitae ipsum magna. Aliquam pretium laoreet tortor quis volutpat. Donec congue, nisl nec consequat varius, enim enim consectetur felis, a viverra libero elit in ligula. Cras posuere ipsum vel mi scelerisque, eu interdum velit elementum. Duis eu posuere est. Ut vestibulum urna eu viverra fringilla. Aliquam tempus nisi eros, vitae posuere nulla fermentum in. Praesent et justo eros. Proin eleifend justo vel justo condimentum ullamcorper. Curabitur vel vehicula lectus. Mauris sed ex ac ipsum ultrices bibendum at id tortor. Aenean dictum magna ac nisi posuere euismod. Ut fermentum, nulla quis venenatis varius, risus nulla dictum felis, ut dictum eros libero vitae justo.&lt;/p&gt;

&lt;p&gt;Integer aliquam tellus vel libero eleifend, condimentum euismod odio tincidunt. Vivamus felis ante, faucibus quis urna nec, volutpat pulvinar quam. Cras dictum libero ac augue bibendum, et pretium ex pharetra. Vivamus suscipit et erat id eleifend. Proin vulputate, quam sit amet pretium fermentum, felis neque scelerisque metus, a rhoncus quam nisi sit amet urna. Sed et commodo libero, laoreet rutrum eros. Vivamus tempor, leo eget scelerisque molestie, sapien augue viverra tortor, et semper arcu eros ut elit. Sed pulvinar ipsum in semper facilisis.&lt;/p&gt;
</description>
				<pubDate>Sun, 23 Jun 2013 04:55:06 +0530</pubDate>
				<link>/2013/06/Cum-sociis-natoque-penatibus</link>
				<guid isPermaLink="true">/2013/06/Cum-sociis-natoque-penatibus</guid>
			</item>
		
			<item>
				<title>Nulla vel risus dapibus</title>
				<description>&lt;p&gt;Nulla vel risus dapibus, fringilla nunc id, interdum magna. Vivamus non diam egestas, bibendum elit sed, condimentum quam. Integer eu ipsum ultrices, tincidunt nibh at, auctor sem. Duis iaculis purus a aliquet gravida. Sed ornare, leo venenatis dignissim condimentum, nibh arcu iaculis dui, nec vulputate ante eros laoreet sem. Fusce dapibus, ante eu blandit tincidunt, odio quam vulputate libero, et interdum tellus lorem eleifend nisi. Nam elementum vel sapien sed rhoncus. Praesent commodo neque odio. Praesent a nisl nec neque laoreet dignissim. Quisque vitae felis a nisl sodales consequat ut ac mi. Etiam varius gravida accumsan. In sed lectus nec ipsum commodo efficitur. Ut vehicula diam eu justo pellentesque, in pulvinar lorem dapibus. Donec ornare metus vitae turpis malesuada, ut aliquet dolor vulputate. Aenean eget ipsum elit. Suspendisse tempor sagittis dictum.&lt;/p&gt;

&lt;p&gt;Vivamus dapibus justo vitae tellus dignissim, non interdum odio egestas. Maecenas tincidunt sem non consequat bibendum. Aliquam cursus, enim sed rutrum porta, nisl tellus ultrices ipsum, vel vestibulum orci tellus sit amet quam. Pellentesque ut viverra lacus. Suspendisse potenti. Ut augue enim, hendrerit sed interdum sed, ullamcorper sit amet ex. Donec at mi at erat hendrerit commodo at non eros. Fusce commodo nec quam at rhoncus.&lt;/p&gt;

&lt;p&gt;Aliquam molestie urna at turpis venenatis, et placerat lorem volutpat. Sed gravida arcu id lectus viverra eleifend. Sed in metus sit amet ante luctus dignissim. Etiam in sodales justo, in iaculis odio. Vestibulum accumsan felis vitae cursus pharetra. Nulla congue ipsum est, sed vulputate odio pulvinar id. Maecenas a sollicitudin turpis.&lt;/p&gt;
</description>
				<pubDate>Thu, 23 May 2013 04:55:06 +0530</pubDate>
				<link>/2013/05/Nulla-vel-risus-dapibus</link>
				<guid isPermaLink="true">/2013/05/Nulla-vel-risus-dapibus</guid>
			</item>
		
	</channel>
</rss>
